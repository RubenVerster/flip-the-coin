{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","score","setScore","selectedGuess","setSelectedGuess","guessMessage","setGuessMessage","correctGuess","setCorrectGuess","flipping","setFlipping","changeGuess","side","console","log","className","id","onClick","disabled","coin","document","getElementById","sideStr","Math","floor","random","setTimeout","coinFlip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uMAuHeA,EArHH,WACV,MAA0BC,mBAAiB,GAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAiB,cAA3D,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAwCJ,mBACtC,kCADF,mBAAOK,EAAP,KAAqBC,EAArB,KAIA,EAAwCN,mBAAyB,MAAjE,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAgCR,oBAAkB,GAAlD,mBAAOS,EAAP,KAAiBC,EAAjB,KAQMC,EAAc,SAACC,GACfH,IACS,eAATG,GACFR,EAAiB,cACjBS,QAAQC,IAAIX,IACM,eAATS,IACTR,EAAiB,cACjBS,QAAQC,IAAIX,MAyChB,OACE,qBAAKY,UAAU,UAAf,SACE,sBAAKA,UAAU,6DAAf,UACE,qBAAKA,UAAU,cAAf,SACE,kDAEF,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAS,uBAAkBN,GAAY,aAA5C,SACE,sBAAKO,GAAG,OAAOD,UAAU,iBAAzB,UACE,qBAAKA,UAAU,aAAf,mBACA,qBAAKA,UAAU,aAAf,0BAIN,qBAAKA,UAAU,yCAAf,SACE,sBAAKA,UAAU,qCAAf,UACE,oBAAIA,UAAS,sBArEA,OAAjBR,EAA8B,cACb,IAAjBA,EAA8B,kBACb,IAAjBA,EAA+B,oBAAnC,GAmEQ,SACGF,IAEH,oBAAIU,UAAU,cAAd,SAA6Bd,IAE7B,sBAAKc,UAAU,sDAAf,UACE,qBACEE,QAAS,kBAAMN,EAAY,eAC3BI,UAAS,+BACW,eAAlBZ,EAAiC,WAAa,gBAHlD,mBAQA,qBACEc,QAAS,kBAAMN,EAAY,eAC3BI,UAAS,+BACW,eAAlBZ,EAAiC,WAAa,gBAHlD,sBASF,wBACEe,SAAUT,EACVM,UAAU,qBACVE,QAAS,kBA/EJ,WACf,IAAIR,EAAJ,CACAC,GAAY,GACZ,IAAIS,EAAOC,SAASC,eAAe,QACnCb,EAAgB,MAChBF,EAAgB,gBAEhB,IAEIgB,EAFAV,EAAOW,KAAKC,MAAsB,EAAhBD,KAAKE,UAGd,IAATb,GACFU,EAAU,aACVH,EAAMJ,UAAY,8BAElBO,EAAU,aACVH,EAAMJ,UAAY,6BAEpBF,QAAQC,IAAIF,EAAMU,GAElBI,YAAW,WACLvB,IAAkBmB,GACpBd,GAAgB,GAChBF,EAAgB,gBAChBJ,EAASD,EAAQ,KAEjBO,GAAgB,GAChBF,EAAgB,wBAChBJ,EAAS,MAEV,KACHwB,YAAW,WAIT,OAHAhB,GAAY,GACZJ,EAAgB,eAChBF,EAAiB,cACTe,EAAMJ,UAAY,mBACzB,OA4CsBY,IAHjB,8BC3FGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,SAM1BO,M","file":"static/js/main.896f4748.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst App = () => {\r\n  const [score, setScore] = useState<number>(0);\r\n  const [selectedGuess, setSelectedGuess] = useState<string>('spin-heads');\r\n  const [guessMessage, setGuessMessage] = useState<string>(\r\n    'Can you predict the outcome?\\\r\n  '\r\n  );\r\n  const [correctGuess, setCorrectGuess] = useState<boolean | null>(null);\r\n  const [flipping, setFlipping] = useState<boolean>(false);\r\n\r\n  const setMessageColor = () => {\r\n    if (correctGuess === null) return 'text-black';\r\n    if (correctGuess === true) return 'text-green-700';\r\n    if (correctGuess === false) return 'text-red-700';\r\n  };\r\n\r\n  const changeGuess = (side: string) => {\r\n    if (flipping) return;\r\n    if (side === 'spin-heads') {\r\n      setSelectedGuess('spin-heads');\r\n      console.log(selectedGuess);\r\n    } else if (side === 'spin-tails') {\r\n      setSelectedGuess('spin-tails');\r\n      console.log(selectedGuess);\r\n    }\r\n  };\r\n\r\n  const coinFlip = () => {\r\n    if (flipping) return;\r\n    setFlipping(true);\r\n    let coin = document.getElementById('coin');\r\n    setCorrectGuess(null);\r\n    setGuessMessage('ðŸ‘€');\r\n\r\n    let side = Math.floor(Math.random() * 2);\r\n\r\n    let sideStr: string;\r\n    if (side === 1) {\r\n      sideStr = 'spin-tails';\r\n      coin!.className = 'coin-container spin-tails';\r\n    } else {\r\n      sideStr = 'spin-heads';\r\n      coin!.className = 'coin-container spin-heads';\r\n    }\r\n    console.log(side, sideStr);\r\n\r\n    setTimeout(() => {\r\n      if (selectedGuess === sideStr) {\r\n        setCorrectGuess(true);\r\n        setGuessMessage('Correct! ^_^');\r\n        setScore(score + 1);\r\n      } else {\r\n        setCorrectGuess(false);\r\n        setGuessMessage('Wrong! à²¥_à²¥');\r\n        setScore(0);\r\n      }\r\n    }, 3000);\r\n    setTimeout(() => {\r\n      setFlipping(false);\r\n      setGuessMessage('Go again :P');\r\n      setSelectedGuess('spin-heads');\r\n      return (coin!.className = 'coin-container');\r\n    }, 5555);\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"card flex flex-col justify-between items-center rounded-md\">\r\n        <div className=\"card-header\">\r\n          <h1>Flip The Coin!</h1>\r\n        </div>\r\n        <div className=\"card-body flex flex-col items-center\">\r\n          <div className={`coin-wrapper ${flipping && 'move-coin'}`}>\r\n            <div id=\"coin\" className=\"coin-container\">\r\n              <div className=\"coin heads\">HEADS</div>\r\n              <div className=\"coin tails\">TAILS</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer flex flex-col items-center\">\r\n          <div className=\"guess flex flex-col justify-center\">\r\n            <h2 className={`guess-title ${setMessageColor()}`}>\r\n              {guessMessage}\r\n            </h2>\r\n            <h2 className=\"guess-score\">{score}</h2>\r\n\r\n            <div className=\"guess-options flex flex-row justify-between mx-auto\">\r\n              <div\r\n                onClick={() => changeGuess('spin-heads')}\r\n                className={`guess-options-option ${\r\n                  selectedGuess === 'spin-heads' ? 'selected' : 'not-selected'\r\n                }`}\r\n              >\r\n                Heads\r\n              </div>\r\n              <div\r\n                onClick={() => changeGuess('spin-tails')}\r\n                className={`guess-options-option ${\r\n                  selectedGuess === 'spin-tails' ? 'selected' : 'not-selected'\r\n                }`}\r\n              >\r\n                Tails\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={flipping}\r\n              className=\"guess-flip mx-auto\"\r\n              onClick={() => coinFlip()}\r\n            >\r\n              Flip!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './css/main.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}